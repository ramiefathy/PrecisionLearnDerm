name: Deploy to Firebase
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Firebase Functions
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
      
      # Install and build functions dependencies
      - name: Install Functions Dependencies
        working-directory: ./functions
        run: |
          echo "Node version: $(node --version)"
          echo "npm version: $(npm --version)"
          # Prefer clean install with lockfile; fall back to install if needed
          npm ci || npm install
          npm run build
      
      - name: Deploy Firebase Functions
        run: |
          # Install Firebase CLI
          npm install -g firebase-tools@latest
          
          # Create temporary service account file
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > /tmp/service-account-key.json
          
          # Set GOOGLE_APPLICATION_CREDENTIALS
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account-key.json
          
          # Deploy functions using service account authentication
          firebase deploy --only functions --project '${{ secrets.FIREBASE_PROJECT_ID }}' --non-interactive
          
          # Clean up service account file
          rm /tmp/service-account-key.json
      
      - name: Deployment Status
        if: always()
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed. Check logs above."
          fi
